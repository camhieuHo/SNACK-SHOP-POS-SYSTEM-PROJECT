
package hothicamhieu_9622;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;

public class SnackShopPOS {

    private static final List<String> cart = new ArrayList<>();
    private static int total = 0;
    private static String customerName = "";
    private static String customerPhone = "";

    public static void main(String[] args) {
        JFrame frame = new JFrame("Snack Shop POS");
        frame.setSize(600, 400);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new GridLayout(3, 2, 10, 10));

        JButton btnAddProduct = createButton("Chọn sản phẩm");
        JButton btnAddCustomer = createButton("Nhập khách hàng");
        JButton btnCreateInvoice = createButton("Tạo hóa đơn");
        JButton btnCheckout = createButton("Thanh toán");
        JButton btnViewCart = createButton("Xem giỏ hàng");

        btnAddProduct.addActionListener(e -> showViewProductsDialog());
        btnAddCustomer.addActionListener(e -> showAddCustomerDialog());
        btnCreateInvoice.addActionListener(e -> showCreateInvoiceDialog());
        btnCheckout.addActionListener(e -> showCheckoutDialog());
        btnViewCart.addActionListener(e -> showViewCartDialog());

        frame.add(btnAddProduct);
        frame.add(btnAddCustomer);
        frame.add(btnCreateInvoice);
        frame.add(btnCheckout);
        frame.add(btnViewCart);

        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
        frame.setVisible(true);
    }

    private static JButton createButton(String text) {
        JButton button = new JButton(text);
        button.setFont(new Font("Arial", Font.BOLD, 20));
        return button;
    }

    private static void showViewProductsDialog() {
        JFrame productCategoryFrame = new JFrame("Chọn danh mục sản phẩm");
        productCategoryFrame.setSize(600, 400);
        productCategoryFrame.setLayout(new GridLayout(3, 1, 5, 5));

        JButton btnDrinks = createButton("Nước uống");
        JButton btnCakes = createButton("Bánh ngọt");
        JButton btnSnacks = createButton("Ăn vặt");

        btnDrinks.addActionListener(e -> showProductSelectionDialog("Drinks"));
        btnCakes.addActionListener(e -> showProductSelectionDialog("Cakes"));
        btnSnacks.addActionListener(e -> showProductSelectionDialog("Snacks"));

        productCategoryFrame.add(btnDrinks);
        productCategoryFrame.add(btnCakes);
        productCategoryFrame.add(btnSnacks);

        productCategoryFrame.setLocationRelativeTo(null);
        productCategoryFrame.setVisible(true);
    }

    private static void showProductSelectionDialog(String category) {
        JFrame productFrame = new JFrame("Danh sách: " + category);
        productFrame.setSize(600, 400);
        productFrame.setLayout(new BorderLayout(5, 5));

        String[][] products;
        if (category.equals("Drinks")) {
            products = new String[][]{{"Trà Sữa", "30000"}, {"Cà Phê Sữa", "35000"}};
        } else if (category.equals("Cakes")) {
            products = new String[][]{{"Bánh Bông Lan", "25000"}, {"Tiramisu", "50000"}};
        } else {
            products = new String[][]{{"Bim Bim", "15000"}, {"Xúc Xích", "20000"}};
        }

        JPanel productPanel = new JPanel();
        productPanel.setLayout(new GridLayout(products.length, 1, 5, 5));

        for (String[] product : products) {
            JButton btnProduct = createButton(product[0] + " - " + product[1] + "đ");
            btnProduct.addActionListener(e -> addProductToCart(product[0], Integer.parseInt(product[1])));
            productPanel.add(btnProduct);
        }

        JButton btnClose = createButton("Đóng");
        btnClose.addActionListener(e -> productFrame.dispose());

        productFrame.add(productPanel, BorderLayout.CENTER);
        productFrame.add(btnClose, BorderLayout.SOUTH);
        productFrame.setLocationRelativeTo(null);
        productFrame.setVisible(true);
    }

    private static void showAddCustomerDialog() {
        JTextField nameField = new JTextField();
        JTextField phoneField = new JTextField();

        Object[] message = {"Tên khách hàng:", nameField, "Số điện thoại:", phoneField};
        int option = JOptionPane.showConfirmDialog(null, message, "Nhập thông tin khách hàng", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            customerName = nameField.getText();
            customerPhone = phoneField.getText();
            JOptionPane.showMessageDialog(null, "Đã lưu thông tin khách hàng!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private static void showCreateInvoiceDialog() {
        if (cart.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Giỏ hàng trống!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        StringBuilder invoice = new StringBuilder("HÓA ĐƠN\n-------------------\n");
        invoice.append("Khách hàng: ").append(customerName.isEmpty() ? "N/A" : customerName).append("\n");
        invoice.append("Số điện thoại: ").append(customerPhone.isEmpty() ? "N/A" : customerPhone).append("\n\n");

        for (String item : cart) {
            invoice.append(item).append("\n");
        }
        invoice.append("-------------------\nTổng tiền: ").append(total).append("đ");

        JOptionPane.showMessageDialog(null, invoice.toString(), "Hóa đơn", JOptionPane.INFORMATION_MESSAGE);
    }

    private static void showCheckoutDialog() {
        JOptionPane.showMessageDialog(null, "Thanh toán thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        cart.clear();
        total = 0;
    }

    private static void addProductToCart(String product, int price) {
        cart.add(product + " - " + price + "đ");
        total += price;
    }

    private static void showViewCartDialog() {
        JOptionPane.showMessageDialog(null, "Giỏ hàng: \n" + String.join("\n", cart) + "\nTổng: " + total + "đ", "Giỏ hàng", JOptionPane.INFORMATION_MESSAGE);
    }
}
